# Copyright (c) Mathias Kaerlev 2011-2012.# This file is part of pyspades.# pyspades program is free software: you can redistribute it and/or modify# it under the terms of the GNU General Public License as published by# the Free Software Foundation, either version 3 of the License, or# (at your option) any later version.# pyspades is distributed in the hope that it will be useful,# but WITHOUT ANY WARRANTY; without even the implied warranty of# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the# GNU General Public License for more details.# You should have received a copy of the GNU General Public License# along with pyspades.  If not, see <http://www.gnu.org/licenses/>.from pyspades.common import *from pyspades.loaders cimport Loaderfrom pyspades import debugfrom pyspades.bytes cimport ByteReader, ByteWriterfrom pyspades import containedCONTAINED_LOADERS = {    0 : contained.PositionData,    1 : contained.OrientationData,    2 : contained.WorldUpdate,    3 : contained.InputData,    5 : contained.GrenadePacket,    6 : contained.SetTool,    7 : contained.SetColor,    8 : contained.ExistingPlayer,    9 : contained.MoveObject,    10 : contained.CreatePlayer,    11 : contained.BlockAction,    12 : contained.BlockLine,    13 : contained.StateData,    14 : contained.KillAction,    15 : contained.ChatMessage,    16 : contained.MapStart,    17 : contained.MapChunk,    18 : contained.PlayerLeft,    19 : contained.TerritoryCapture,    20 : contained.ProgressBar,    21 : contained.IntelCapture,    22 : contained.IntelPickup,    23 : contained.IntelDrop,    24 : contained.Restock,    25 : contained.FogColor,    26 : contained.WeaponReload,    27 : contained.ChangeTeam,    28 : contained.ChangeWeapon,    29 : contained.BasicServerMessage,    30 : contained.ServerMessage,    31 : contained.ServerLoadMessage}SERVER_LOADERS = CONTAINED_LOADERS.copy()SERVER_LOADERS.update({    4 : contained.SetHP})CLIENT_LOADERS = CONTAINED_LOADERS.copy()CLIENT_LOADERS.update({    4 : contained.HitPacket})def load_server_packet(data):    return load_contained_packet(data, SERVER_LOADERS)def load_client_packet(data):    return load_contained_packet(data, CLIENT_LOADERS)cdef inline Loader load_contained_packet(ByteReader data, dict table):    type = data.readByte(True)    return table[type](data)